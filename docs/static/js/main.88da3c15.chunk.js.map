{"version":3,"sources":["components/border/border.jsx","components/cell/cell.jsx","components/field/field.jsx","components/score/score.jsx","components/game-result/game-result.jsx","models/cell-model.js","models/field-model.js","services/computer.js","components/game/game.jsx","app.js","index.js"],"names":["Border","props","borderClassName","className","isActive","react_default","a","createElement","onClick","Cell","handleClick","index","event","stopPropagation","onBorderClick","top","right","bottom","left","player","cssClass","cellClassName","map","borderName","components_border_border","key","bind","Field","rows","cells","rowIndex","cell","cellIndex","components_cell_cell","Object","assign","borderIndex","row","column","openBorders","getOpenBorders","length","onCellClick","Score","playerOneScore","playerTwoScore","GameResult","CellModel","classCallCheck","this","push","buildRows","halfSize","i","j","computeMove","availableMoves","size","undefined","border","k","isLowPriority","randomMove","Math","floor","random","goodMoves","filter","Game","_this","possibleConstructorReturn","getPrototypeOf","call","state","constructCleanState","reset","assertThisInitialized","enlargeField","shrinkField","handleBorderClick","fieldSize","isGameOver","fieldSizeChange","increment","_this2","setState","prevState","_this3","_this4","nextCell","toConsumableArray","neighbours","nextRow","nextColumn","getCellNeighbours","neighbour","currentCell","keepTurn","scoreIncrement","areMovesExist","some","hasMove","computerMove","_this5","setTimeout","move","es","glyph","bsStyle","score_score","field_field","game_result_game_result","React","PureComponent","App","game_game","Component","ReactDOM","render","src_app","document","getElementById"],"mappings":"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","file":"static/js/main.88da3c15.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './border.css';\n\nconst Border = (props) => {\n  const borderClassName = props.className + (props.isActive ? ' active' : '');\n\n  return (\n    <div\n      className={borderClassName}\n      onClick={props.onClick}></div>\n    );\n};\n\nBorder.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Border;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './cell.css';\nimport Border from '../border/border';\n\nconst Cell = (props) => {\n  const cellClassName = () => {\n    const { top, right, bottom, left, player } = props;\n    let cssClass = \"box\";\n    if (top === 2 && right === 2 && bottom === 2 && left === 2) {\n      cssClass += player === 0 ? ' isFirstPlayer' : ' isSecondPlayer';\n    }\n\n    return cssClass;\n  }\n\n  const handleClick = (index, event) => {\n    event.stopPropagation();\n    props.onBorderClick(index);\n  }\n\n  return (\n    <div className={cellClassName()} onClick={() => props.onClick()}>\n      {['top', 'right', 'bottom', 'left'].map((borderName, index) => (\n        props[borderName] > 0 &&\n        <Border\n          key={borderName}\n          className={borderName}\n          onClick={handleClick.bind(null, index)}\n          isActive={props[borderName] === 2}>\n        </Border>\n      ))}\n    </div>\n  );\n}\n\nCell.propTypes = {\n  top: PropTypes.number,\n  right: PropTypes.number,\n  bottom: PropTypes.number,\n  left: PropTypes.number,\n  player: PropTypes.number,\n  onBorderClick: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Cell;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Cell from '../cell/cell';\nimport './field.css';\n\nconst Field = (props) => {\n  const onCellClick = (row, column) => {\n    const currentCell = props.rows[row][column];\n    const openBorders = currentCell.getOpenBorders();\n    if (openBorders.length !== 1) {\n      return;\n    }\n\n    props.onBorderClick(row, column, openBorders[0]);\n  }\n\n  return (\n    <div className='container'>\n      {props.rows.map((cells, rowIndex) =>\n        <div className=\"row\" key={rowIndex}>\n          {\n            cells.map((cell, cellIndex) =>\n              <Cell\n                key={cellIndex}\n                onBorderClick={(borderIndex) => props.onBorderClick(rowIndex, cellIndex, borderIndex)}\n                onClick={() => onCellClick(rowIndex, cellIndex)}\n                {...cell} />)\n          }\n        </div>)}\n    </div>\n  );\n}\n\nField.propTypes = {\n  rows: PropTypes.array.isRequired,\n  onBorderClick: PropTypes.func.isRequired\n};\n\nexport default Field;","import React from 'react';\nimport './score.css';\n\nconst Score = (props) => (\n  <div className=\"Score\">\n    <span className=\"Score-firstPlayer\">{props.playerOneScore}</span>:\n    <span className=\"Score-secondPlayer\">{props.playerTwoScore}</span>\n  </div>\n);\n\nexport default Score;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './game-result.css';\n\nconst GameResult = (props) => (\n  <div className=\"GameResult\">\n    Game over! {props.playerOneScore > props.playerTwoScore ? 'You won :)' : 'Computer won :('}\n  </div>\n);\n\nGameResult.propTypes = {\n  playerOneScore: PropTypes.number.isRequired,\n  playerTwoScore: PropTypes.number.isRequired\n};\n\nexport default GameResult;","class CellModel {\n  constructor(top, right, bottom, left, player) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n    this.player = player;\n  }\n\n  get isActive() {\n    return this.top === 2 && this.right === 2 && this.bottom === 2 && this.left === 2;\n  }\n\n  get hasMove() {\n    return this.getOpenBorders().length > 0;\n  }\n\n  getOpenBorders() {\n    const openBorders = [];\n    if (this.top === 1) openBorders.push(0);\n    if (this.right === 1) openBorders.push(1);\n    if (this.bottom === 1) openBorders.push(2);\n    if (this.left === 1) openBorders.push(3);\n\n    return openBorders;\n  }\n\n  clone() {\n    return new CellModel(this.top, this.right, this.bottom, this.left, this.player);\n  }\n}\n\nexport default CellModel;","import CellModel from './cell-model';\n\nfunction buildRows(halfSize) {\n  const rows = [];\n  for (let i = 0; i < halfSize * 2; i++) {\n    const cells = [];\n    for (let j = 0; j < halfSize * 2; j++) {\n      if (i < halfSize) {\n        if (j < halfSize - i - 2 ||\n          j >= halfSize + i + 2) {\n          cells.push(new CellModel());\n          continue;\n        }\n        if (j === halfSize - i - 2) {\n          cells.push(new CellModel(0, 2, 2, 0));\n          continue;\n        }\n        if (j === halfSize - i - 1) {\n          cells.push(new CellModel(2, 1, 1, 2));\n          continue;\n        }\n        if (j === halfSize + i) {\n          cells.push(new CellModel(2, 2, 1, 1));\n          continue;\n        }\n        if (j === halfSize + i + 1) {\n          cells.push(new CellModel(0, 0, 2, 2));\n          continue;\n        }\n      }\n      if (i === halfSize) {\n        if (j === 0) {\n          cells.push(new CellModel(1, 1, 2, 2));\n          continue;\n        }\n        if (j === halfSize * 2 - 1) {\n          cells.push(new CellModel(1, 2, 2, 1));\n          continue;\n        }\n      }\n      if (i > halfSize) {\n        if (j < i - halfSize - 1 ||\n          j > 3 * halfSize - i) {\n          cells.push(new CellModel());\n          continue;\n        }\n        if (j === i - halfSize - 1) {\n          cells.push(new CellModel(2, 2, 0, 0));\n          continue;\n        }\n        if (j === i - halfSize) {\n          cells.push(new CellModel(1, 1, 2, 2));\n          continue;\n        }\n        if (j === 3 * halfSize - i - 1) {\n          cells.push(new CellModel(1, 2, 2, 1));\n          continue;\n        }\n        if (j === 3 * halfSize - i) {\n          cells.push(new CellModel(2, 0, 0, 2));\n          continue;\n        }\n      }\n\n      cells.push(new CellModel(1, 1, 1, 1));\n    }\n\n    rows.push(cells);\n  }\n  return rows;\n}\n\nfunction getCellNeighbours(row, column) {\n  return [{\n    borderName: 'top',\n    nextRow: row - 1,\n    nextColumn: column\n  }, {\n    borderName: 'right',\n    nextRow: row,\n    nextColumn: column + 1\n  }, {\n    borderName: 'bottom',\n    nextRow: row + 1,\n    nextColumn: column\n  }, {\n    borderName: 'left',\n    nextRow: row,\n    nextColumn: column - 1\n  }];\n}\n\nexport { buildRows, getCellNeighbours };","function computeMove(rows) {\n  const availableMoves = [];\n  const size = rows.length;\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      const cell = rows[i][j];\n      if (cell.player !== undefined) {\n        continue;\n      }\n\n      const openBorders = cell.getOpenBorders();\n      if (openBorders.length === 1) {\n        return {row: i, column: j, border: openBorders[0]};\n      }\n\n      if (openBorders.length === 0) {\n        continue;\n      }\n\n      for (let k = 0; k < openBorders.length; k++) {\n        const isLowPriority = openBorders.length === 2 ||\n          (i > 0 && openBorders[k] === 0 && rows[i - 1][j].getOpenBorders().length === 2) ||\n          (j < size - 1 && openBorders[k] === 1 && rows[i][j + 1].getOpenBorders().length === 2) ||\n          (i < size - 1 && openBorders[k] === 2 && rows[i + 1][j].getOpenBorders().length === 2) ||\n          (j > 0 && openBorders[k] === 3 && rows[i][j - 1].getOpenBorders().length === 2);\n        availableMoves.push({\n          row: i,\n          column: j,\n          border: openBorders[k],\n          isLowPriority: isLowPriority\n        });\n      }\n    }\n  }\n\n  if (availableMoves.length === 0) {\n    return;\n  }\n\n  let randomMove = availableMoves[Math.floor(Math.random() * availableMoves.length)];\n  const goodMoves = availableMoves.filter(cell => !cell.isLowPriority);\n  if (goodMoves.length > 0) {\n    randomMove = goodMoves[Math.floor(Math.random() * goodMoves.length)];\n  }\n\n  return { row: randomMove.row, column: randomMove.column, border: randomMove.border};\n}\n\nexport default computeMove;","import React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Glyphicon\n} from 'react-bootstrap';\nimport Field from '../field/field';\nimport Score from '../score/score';\nimport GameResult from '../game-result/game-result';\nimport { buildRows, getCellNeighbours } from '../../models/field-model';\nimport computeMove from '../../services/computer';\nimport './game.css';\n\nclass Game extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = this.constructCleanState(3);\n\n    this.reset = this.reset.bind(this);\n    this.enlargeField = this.enlargeField.bind(this);\n    this.shrinkField = this.shrinkField.bind(this);\n    this.handleBorderClick = this.handleBorderClick.bind(this);\n  }\n\n  constructCleanState(fieldSize) {\n    return {\n      fieldSize: fieldSize,\n      rows: buildRows(fieldSize),\n      player: 0,\n      playerOneScore: 0,\n      playerTwoScore: 0,\n      isGameOver: false\n    }\n  }\n\n  enlargeField() {\n    this.fieldSizeChange(1);\n  }\n\n  shrinkField() {\n    this.fieldSizeChange(-1);\n  }\n\n  fieldSizeChange(increment) {\n    const fieldSize = this.state.fieldSize + increment;\n    if (fieldSize < 2 || fieldSize > 10) {\n      return;\n    }\n    this.setState((prevState) => this.constructCleanState(prevState.fieldSize + increment));\n  }\n\n  reset() {\n    this.setState((prevState) => this.constructCleanState(prevState.fieldSize));\n  }\n\n  handleBorderClick(row, column, border) {\n    this.setState(prevState => {\n      const rows = [...prevState.rows];\n      const neighbours = getCellNeighbours(row, column);\n      const neighbour = neighbours[border];\n      const currentCell = rows[row][column];\n      let nextCell;\n      let keepTurn = false;\n      let scoreIncrement = 0;\n\n      if (currentCell[neighbour.borderName] === 2) {\n        return;\n      }\n      nextCell = rows[neighbour.nextRow][neighbour.nextColumn];\n      currentCell[neighbour.borderName] = 2;\n      const nextCellBorderName = neighbours[(border + 2) % 4].borderName;\n      nextCell[nextCellBorderName] = 2;\n      if (currentCell.isActive) {\n        currentCell.player = prevState.player;\n        keepTurn = true;\n        scoreIncrement++;\n      }\n      if (nextCell.isActive) {\n        nextCell.player = prevState.player;\n        keepTurn = true;\n        scoreIncrement++;\n      }\n\n      let playerOneScore = prevState.playerOneScore;\n      let playerTwoScore = prevState.playerTwoScore;\n\n      playerOneScore += keepTurn && prevState.player === 0 ? scoreIncrement : 0;\n      playerTwoScore += keepTurn && prevState.player === 1 ? scoreIncrement : 0;\n\n      let player = keepTurn ? prevState.player : prevState.player === 0 ? 1 : 0;\n\n      let areMovesExist = rows.some(cells => cells.some(cell => cell.hasMove));\n      let isGameOver = prevState.isGameOver;\n      if (areMovesExist) {\n        if (player === 1) {\n          this.computerMove();\n        }\n      } else {\n        isGameOver = true;\n      }\n\n      return { rows, player, playerOneScore, playerTwoScore, isGameOver };\n    });\n  }\n\n  computerMove() {\n    setTimeout(() => {\n      const move = computeMove(this.state.rows);\n      if (move) {\n        this.handleBorderClick(move.row, move.column, move.border);\n      }\n    }, 100);\n  }\n\n  render() {\n    const playerOneScore = this.state.playerOneScore;\n    const playerTwoScore = this.state.playerTwoScore;\n    return (\n      <div>\n        <div className=\"FieldSettings\">\n          <span className=\"FieldSettings-Size\">Field size:</span>\n          <ButtonGroup>\n            <Button onClick={this.enlargeField}><Glyphicon glyph=\"plus\" /></Button>\n            <Button onClick={this.shrinkField}><Glyphicon glyph=\"minus\" /></Button>\n          </ButtonGroup>\n          <Button bsStyle=\"primary\" className=\"ResetButton\" onClick={this.reset}>Reset</Button>\n        </div>\n        <Score playerOneScore={playerOneScore} playerTwoScore={playerTwoScore} />\n        <Field rows={this.state.rows} onBorderClick={this.handleBorderClick} />\n        {this.state.isGameOver &&\n          <GameResult playerOneScore={playerOneScore} playerTwoScore={playerTwoScore}></GameResult>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport './app.css';\nimport Game from './components/game/game';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>Cell Domination</h2>\n        </div>\n        <div className=\"App-intro\">\n          <Game />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}